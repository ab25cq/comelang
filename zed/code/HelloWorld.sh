zed 1
zed '"HELLO WORLD"'
zed 'a=1+1; a'
zed 'if false { 1 } else { 2 }'
zed 'a=2; a > 1'
zed 'true && false'
zed 'a=1; while a < 5 { print a; a = a + 1 }'
zed 'stdin;'
zed '/aaa/g'
zed '[1,2,3]'
zed '["AAA":1, "BBB":2]'
zed '"AAA".sub(/A/g, "B")'
valgrind zed '"AAA".sub_block(/A/g) { it.lower_case() }' 2> aaa
echo aaa | zed '.sub(/a/, "b").chomp()'
echo abc | zed '.scan_block(/./) { it.upper_case() }.join("+")'
echo abc | zed '.index("c", -1)'
echo abc | zed '.index_regex(/b/, -1)'
echo abcabc | zed '.rindex_regex(/b/, -1)'
echo ABCABCABC | zed '.chomp().sub_count(/B/g, "C", 2) == "ACCACCABC"'
echo A,B,C | zed 'a=.split(/,/); a[0] == "A" && a[1] == "B" && a[2] == "C"'
echo abc | zed '.chomp().reverse()'
zed '"ABCDEFG".chomp().substring(0,1)'
zed '"ABCDEFG".length()'
zed '"ABCDEFG".compare("ZZZZ")'
zed '"ABCDEFG".index_regex(/B/, -1)'
zed '"ABCDEFG".replace(1, "Z")'
zed '"ABC,DEF,GHI".split_char(",")'
zed '"ABC".delete(0,2)'
zed '[1,2] + [3]'
zed '["1":1,"2":2] + ["3":3]'
zed '[1] == [2]'
zed '[1,2,3,4,5].filter { it > 2 }'
zed '[1,2,3,4,5].map { it + 1 }'
zed '["ZA", "ZB", "ZC"].each { print it; }'
zed '["AAA","BBB","CCC"].map { it.substring(0,1) }'
#valgrind --leak-check=full zed 'l=["AAA", "BBB"]; l[1]="CCC"; l[0] == "AAA" && l[1] == "CCC"'
#valgrind --leak-check=full zed 'l=["AAA":1, "BBB":2]; l["CCC"]=3; l["AAA"] == 1 && l["BBB"] == 2 && l["CCC"]==3'
#zed 'm=["AAA":1, "BBB":2]; m["CCC"] = 3; m["AAA"] == 1 && m["BBB"] == 2 && m["CCC"] == 3'
